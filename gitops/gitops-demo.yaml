---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitops-demo
data:
  gitops-demo.sh: |
    #!/bin/bash
    echo -e "Content-type: application/json\n"
    echo "$(/tmp/kubectl get no $(/tmp/kubectl get po $HOSTNAME -o jsonpath='{.spec.nodeName}') -ojsonpath='{.metadata.labels}')"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitops-demo
  labels:
    app: gitops-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitops-demo
  template:
    metadata:
      labels:
        app: gitops-demo
    spec:
      containers:
      - name: server
        image: python:3
        command: ["/bin/bash", "-c", "cd /tmp; curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"; chmod 755 kubectl; cd /; python -m http.server --cgi 8888"]
        ports:
        - containerPort: 8888
        volumeMounts:
        - name: script
          mountPath: /cgi-bin
      securityContext:
        runAsUser: 1000
      volumes:
      - name: script
        configMap:
          name: gitops-demo
          defaultMode: 0777
---
apiVersion: v1
kind: Service
metadata:
  name: gitops-demo
spec:
  selector:
    app: gitops-demo
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8888
  type: LoadBalancer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: always-admin
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
